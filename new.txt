package inventorystat;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

import util.ConfigFile;
import util.ResultSetTableModel;
import util.WriteLog;

public class SubjcetItemDiag extends JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3531259789500243442L;
	public static JFrame f = new JFrame("增加专业类别");
	private JPanel oldsubjectPanel = new JPanel();
	private JPanel addnewsubjectPanel = new JPanel();
	private static ResultSetTableModel model;
	private static ResultSet rs;
	private static Connection conn;
	private static Statement stmt;
	private JScrollPane resultscrollPane;
	private JButton addButton;
	private JTextField newsubjcetText;

	public SubjcetItemDiag(/* JFrame f, String string */) {

/*		model = null;
		rs = null;
		conn = null;
		stmt  = null;
		resultscrollPane = null;
*/
		f.setSize(500, 500);
		f.setVisible(true);
		f.setLocationRelativeTo(null);
		

		oldsubjectPanel
				.setBorder(new TitledBorder(new EtchedBorder(), "专业类别列表"));
		oldsubjectPanel.setBounds(20, 15, 200, 420);

		addnewsubjectPanel.setBorder(new TitledBorder(new EtchedBorder(),
				"增加专业类别"));
		addnewsubjectPanel.setBounds(270, 15, 200, 420);

		// 绘制添加新专业的按钮
		addButton = new JButton("增加");
		addButton.setPreferredSize(new Dimension(120, 25));
		newsubjcetText = new JTextField(15);
		addnewsubjectPanel.add(newsubjcetText);
		addnewsubjectPanel.add(addButton);

		
		loadoldsubjcet();
		f.add(oldsubjectPanel);
		f.add(addnewsubjectPanel);

		f.setLayout(null);
		f.setVisible(true);

		addButton.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {

				String strnewsubject = newsubjcetText.getText();
				if (strnewsubject.isEmpty()) {
					JOptionPane.showMessageDialog(null, "请输入需要添加的专业类别！", "警告",
							JOptionPane.INFORMATION_MESSAGE);
				}

				else {
					
					try {
						addnewsubjcettodb(strnewsubject);
						newsubjcetText.setText(null);
						loadoldsubjcet();
					} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}

			}
		});
	}

	
	protected void addnewsubjcettodb(String string) throws SQLException {

		try {
			// 获取数据库连接
			conn = ConfigFile.getConnection();
			// 创建Statement
			stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
					ResultSet.CONCUR_UPDATABLE);

			String query = "insert into category (category) values ('" + string
					+ "') ; ";

			// 查询用户选择的数据表
			stmt.execute(query);
			JOptionPane.showMessageDialog(null, "插入专业类别成功！", "信息",
					JOptionPane.INFORMATION_MESSAGE);

		}

		catch (Exception e1) {
			e1.printStackTrace();
		} finally {
			conn.close();
			stmt.close();

		}

	}

	private void loadoldsubjcet()  {
		try {
			// 获取数据库连接
			conn = ConfigFile.getConnection();
			// 创建Statement
			stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
					ResultSet.CONCUR_UPDATABLE);
		}

		catch (Exception e1) {
			e1.printStackTrace();
		}

		// 获取数据并填充至表格中
		try {
			// 如果装载JTable的JScrollPane不为空
			if (resultscrollPane != null) {
				// 从主窗口中删除表格
				oldsubjectPanel.remove(resultscrollPane);
				resultscrollPane = null;
			}
			// 如果结果集不为空，则关闭结果集
			if (rs != null) {
				//rs.close();
				rs = null;
			}
			String query = "select category from category ; ";

			// 查询用户选择的数据表
			rs = stmt.executeQuery(query);
			// 使用查询到的ResultSet创建TableModel对象
			model = new ResultSetTableModel(rs, true);
			// 为TableModel添加监听器，监听用户的修改
			model.addTableModelListener(new TableModelListener() {

				public void tableChanged(TableModelEvent evt) {

					int row = evt.getFirstRow();
					int column = evt.getColumn();
					new WriteLog("修改的列:" + column + " ，修改的行:" + row
							+ " ，修改后的值:" + model.getValueAt(row, column));
				}
			});
			// 使用TableModel创建JTable，并将对应表格添加到窗口中
			Object[] columnTitle = { "专业类别" };
			JTable table = new JTable(model);
			for (int i = 0; i < table.getColumnCount(); i++) {
				table.getColumnModel().getColumn(i)
						.setHeaderValue(columnTitle[i]);
			}
			resultscrollPane = new JScrollPane(table);
			resultscrollPane.setPreferredSize(new Dimension(oldsubjectPanel
					.getWidth() - 30, oldsubjectPanel.getHeight() - 50));
			resultscrollPane
					.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

			oldsubjectPanel.add(resultscrollPane, BorderLayout.CENTER);
		
			//f.validate();
				f.setVisible(true);
		} catch (SQLException e3) {
			e3.printStackTrace();
		}
	

	}

}
